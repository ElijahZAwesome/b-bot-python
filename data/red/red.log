[04/11/2017 12:25] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 601, in _create_direct_connection
    local_addr=self._local_addr)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 777, in create_connection
    raise exceptions[0]
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 764, in create_connection
    yield from self.sock_connect(sock, address)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\selector_events.py", line 451, in sock_connect
    return (yield from fut)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\selector_events.py", line 481, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
OSError: [Errno 10065] Connect call failed ('104.16.59.5', 443)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 624, in _create_direct_connection
    (req.host, req.port, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10065] Can not connect to discordapp.com:443 [Connect call failed ('104.16.59.5', 443)]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 603, in main
    yield from bot.connect()
  File "lib\discord\client.py", line 451, in connect
    self.ws = yield from DiscordWebSocket.from_client(self, resume=True)
  File "lib\discord\gateway.py", line 198, in from_client
    gateway = yield from client.http.get_gateway()
  File "lib\discord\http.py", line 633, in get_gateway
    data = yield from self.request(Route('GET', '/gateway'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10065] Cannot connect to host discordapp.com:443 ssl:True [Can not connect to discordapp.com:443 [Connect call failed ('104.16.59.5', 443)]]
[04/11/2017 12:26] ERROR red load_cogs 573: HTTPSConnectionPool(host='api.imgur.com', port=443): Max retries exceeded with url: /3/credits (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x04845D10>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',))
Traceback (most recent call last):
  File "lib\urllib3\connection.py", line 141, in _new_conn
    (self.host, self.port), self.timeout, **extra_kw)
  File "lib\urllib3\util\connection.py", line 60, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "lib\urllib3\connectionpool.py", line 601, in urlopen
    chunked=chunked)
  File "lib\urllib3\connectionpool.py", line 346, in _make_request
    self._validate_conn(conn)
  File "lib\urllib3\connectionpool.py", line 850, in _validate_conn
    conn.connect()
  File "lib\urllib3\connection.py", line 284, in connect
    conn = self._new_conn()
  File "lib\urllib3\connection.py", line 150, in _new_conn
    self, "Failed to establish a new connection: %s" % e)
urllib3.exceptions.NewConnectionError: <urllib3.connection.VerifiedHTTPSConnection object at 0x04845D10>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "lib\requests\adapters.py", line 440, in send
    timeout=timeout
  File "lib\urllib3\connectionpool.py", line 639, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "lib\urllib3\util\retry.py", line 388, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.imgur.com', port=443): Max retries exceeded with url: /3/credits (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x04845D10>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\image.py", line 168, in setup
    bot.add_cog(Image(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\image.py", line 22, in __init__
    self.imgur = ImgurClient(CLIENT_ID, CLIENT_SECRET)
  File "lib\imgurpython\client.py", line 85, in __init__
    self.credits = self.get_credits()
  File "lib\imgurpython\client.py", line 94, in get_credits
    return self.make_request('GET', 'credits', None, True)
  File "lib\imgurpython\client.py", line 131, in make_request
    response = method_to_call(url, headers=header, params=data, data=data)
  File "lib\requests\api.py", line 72, in get
    return request('get', url, params=params, **kwargs)
  File "lib\requests\api.py", line 58, in request
    return session.request(method=method, url=url, **kwargs)
  File "lib\requests\sessions.py", line 508, in request
    resp = self.send(prep, **send_kwargs)
  File "lib\requests\sessions.py", line 618, in send
    r = adapter.send(request, **kwargs)
  File "lib\requests\adapters.py", line 508, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='api.imgur.com', port=443): Max retries exceeded with url: /3/credits (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x04845D10>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed',))
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:27] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:28] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:29] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:30] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 12:31] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[04/11/2017 13:44] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 13, 32, '\t\tchannel = ctx.message.channel\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 13
    channel = ctx.message.channel
                                ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 13, 32, '\t\tchannel = ctx.message.channel\n'))
[04/11/2017 13:44] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 32, '\t\tchannel = ctx.message.channel\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 15
    channel = ctx.message.channel
                                ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 32, '\t\tchannel = ctx.message.channel\n'))
[04/11/2017 13:45] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 33, '\t\tchannel = ctx.message.channel;\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 15
    channel = ctx.message.channel;
                                 ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 33, '\t\tchannel = ctx.message.channel;\n'))
[04/11/2017 13:45] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 32, '\t\tchannel = ctx.message.channel\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 15
    channel = ctx.message.channel
                                ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 32, '\t\tchannel = ctx.message.channel\n'))
[04/11/2017 13:47] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 32, '\t\tchannel = ctx.message.channel\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 17
    channel = ctx.message.channel
                                ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 32, '\t\tchannel = ctx.message.channel\n'))
[04/11/2017 14:10] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 32, '\t\tchannel = ctx.message.channel\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 17
    channel = ctx.message.channel
                                ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 32, '\t\tchannel = ctx.message.channel\n'))
[04/11/2017 14:14] ERROR owner load 68: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 16, '                channel = ctx.message.channel\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 15
    channel = ctx.message.channel
    ^
IndentationError: unexpected indent

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 16, '                channel = ctx.message.channel\n'))
[04/11/2017 14:15] ERROR owner load 68: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 12, '            channel = ctx.message.channel\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 15
    channel = ctx.message.channel
    ^
IndentationError: unexpected indent

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 15, 12, '            channel = ctx.message.channel\n'))
[04/11/2017 14:16] ERROR owner load 68: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 16, 17, '                 await self.bot.say("Omae wa mou Shindeiru")\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 16
    await self.bot.say("Omae wa mou Shindeiru")
    ^
IndentationError: unexpected indent

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 16, 17, '                 await self.bot.say("Omae wa mou Shindeiru")\n'))
[04/11/2017 14:16] ERROR owner load 68: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 16, 12, '            await self.bot.say("Omae wa mou Shindeiru")\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 16
    await self.bot.say("Omae wa mou Shindeiru")
    ^
IndentationError: unexpected indent

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 16, 12, '            await self.bot.say("Omae wa mou Shindeiru")\n'))
[04/11/2017 14:16] ERROR owner load 68: ('expected an indented block', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 19, 13, '        await self.bot.send_file(channel, f)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 19
    await self.bot.send_file(channel, f)
        ^
IndentationError: expected an indented block

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('expected an indented block', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 19, 13, '        await self.bot.send_file(channel, f)\n'))
[04/11/2017 14:18] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 17, in thot
    with open('https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif', 'rb') as f:
OSError: [Errno 22] Invalid argument: 'https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif'
[04/11/2017 14:20] ERROR owner load 68: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 12, '            await self.bot.send_file (https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 17
    await self.bot.send_file (https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif)
    ^
IndentationError: unexpected indent

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('unexpected indent', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 12, '            await self.bot.send_file (https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif)\n'))
[04/11/2017 14:20] ERROR owner load 68: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 40, '        await self.bot.send_file (https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 17
    await self.bot.send_file (https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif)
                                   ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 17, 40, '        await self.bot.send_file (https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif)\n'))
[04/11/2017 14:21] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 17, in thot
    await self.bot.send_file ("https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif")
TypeError: send_file() missing 1 required positional argument: 'fp'
[04/11/2017 14:23] ERROR owner load 73: name 'os' is not defined
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 24, in setup
    bot.add_cog(DeepFry(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 9, in __init__
    self.path = os.path.join("data", "downloader")
NameError: name 'os' is not defined
[04/11/2017 14:25] ERROR owner load 73: name 'dataIO' is not defined
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in setup
    bot.add_cog(DeepFry(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 15, in __init__
    self.repos = dataIO.load_json(self.file_path)
NameError: name 'dataIO' is not defined
[04/11/2017 14:25] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 25, in thot
    await self.bot.send_file ("https://media.giphy.com/media/l1Kdbsyx3PiJO4jCw/giphy.gif")
TypeError: send_file() missing 1 required positional argument: 'fp'
[04/11/2017 14:28] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 25, in thot
    with open('thot.gif', 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'thot.gif'
[04/11/2017 14:29] ERROR owner load 73: [Errno 2] No such file or directory: 'data\\deepfry\\repos.json'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 29, in setup
    bot.add_cog(DeepFry(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 16, in __init__
    self.repos = dataIO.load_json(self.file_path)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\utils\dataIO.py", line 32, in load_json
    return self._read_json(filename)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\utils\dataIO.py", line 45, in _read_json
    with open(filename, encoding='utf-8', mode="r") as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data\\deepfry\\repos.json'
[04/11/2017 14:29] ERROR owner load 73: 'DeepFry' object has no attribute 'file_path'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in setup
    bot.add_cog(DeepFry(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 14, in __init__
    self.repos = dataIO.load_json(self.file_path)
AttributeError: 'DeepFry' object has no attribute 'file_path'
[04/11/2017 14:32] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 22, in thot
    with open('thot.gif', 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'thot.gif'
[04/11/2017 14:33] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 22, in thot
    with open('thot.gif', 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'thot.gif'
[04/11/2017 14:33] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 22, in thot
    with open('data/deepfry/thot.gif', 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'thot.gif'
[04/11/2017 14:34] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 23, in thot
    await self.bot.send_file (f)
TypeError: send_file() missing 1 required positional argument: 'fp'
[04/11/2017 14:37] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 20, in thot
    channel = ctx.message.channel
AttributeError: 'str' object has no attribute 'message'
[04/11/2017 14:37] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 20, in thot
    channel = message.channel
NameError: name 'message' is not defined
[04/11/2017 14:39] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 20, in thot
    channel = ctx.message.channel
AttributeError: 'str' object has no attribute 'message'
[04/11/2017 14:39] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 20, in thot
    channel = ctx.message.channel
AttributeError: 'str' object has no attribute 'message'
[04/11/2017 14:42] ERROR owner load 73: name 'true' is not defined
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 8, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 15, in DeepFry
    @commands.command(pass_context=true)
NameError: name 'true' is not defined
[04/11/2017 14:44] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\thot.py", line 23, in thot
    with open('data/deepfry/thot.gif', 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data/deepfry/thot.gif'
[04/11/2017 14:45] ERROR red on_command_error 369: Exception in command 'thot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\thot.py", line 23, in thot
    with open(self.path + 'thot.gif', 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data\\thotthot.gif'
[04/11/2017 16:57] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 21, in deepfry
    img = Image.open(self.path + '/test.jpg')
NameError: name 'Image' is not defined
[04/11/2017 16:58] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 21, in deepfry
    img = Image.open(self.path + '/test.jpg')
NameError: name 'Image' is not defined
[04/11/2017 17:01] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 25, in deepfry
    img.save(test_edited.jpg, 'JPEG', quality=quality_val)
NameError: name 'test_edited' is not defined
[04/11/2017 17:36] ERROR owner load 68: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 28, 10, 'class PIL.ImageEnhance.Contrast(image)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 28
    class PIL.ImageEnhance.Contrast(image)
             ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 28, 10, 'class PIL.ImageEnhance.Contrast(image)\n'))
[04/11/2017 17:36] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 25, in deepfry
    enhancer.Contrast(2)
NameError: name 'enhancer' is not defined
[04/11/2017 17:37] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 22, in deepfry
    enhancer = ImageEnhance.Contrast(image)
NameError: name 'ImageEnhance' is not defined
[04/11/2017 17:38] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 23, in deepfry
    enhancer = ImageEnhance.Contrast(image)
NameError: name 'image' is not defined
[04/11/2017 17:44] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 28, in deepfry
    img.save('test_edited.jpg', 'JPEG', quality=quality_val).show()
AttributeError: 'NoneType' object has no attribute 'show'
[04/11/2017 17:45] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 29, in deepfry
    self.bot.uploadFile(channel, img)
  File "lib\discord\client.py", line 296, in __getattr__
    raise AttributeError(msg.format(self.__class__, name))
AttributeError: '<class '__main__.Bot'>' object has no attribute 'uploadFile'
[04/11/2017 17:57] ERROR owner load 68: ('unindent does not match any outer indentation level', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 34, 31, '     async def deepfry2(self):\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 34
    async def deepfry2(self):
                            ^
IndentationError: unindent does not match any outer indentation level

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('unindent does not match any outer indentation level', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 34, 31, '     async def deepfry2(self):\n'))
[04/11/2017 17:58] ERROR owner load 73: name 'change_contrast' is not defined
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in DeepFry
    result = change_contrast(self.path + '/test_edited1.jpg', 100)
NameError: name 'change_contrast' is not defined
[04/11/2017 17:59] ERROR owner load 73: name 'self' is not defined
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in DeepFry
    result = deepfry2(self.path + '/test_edited1.jpg', 100)
NameError: name 'self' is not defined
[04/11/2017 17:59] ERROR owner load 73: name 'data' is not defined
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in DeepFry
    result = deepfry2(data/deepfry + '/test_edited1.jpg', 100)
NameError: name 'data' is not defined
[04/11/2017 18:00] ERROR owner load 73: deepfry2() takes 1 positional argument but 2 were given
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in DeepFry
    result = deepfry2('data/deepfry' + '/test_edited1.jpg', 100)
TypeError: deepfry2() takes 1 positional argument but 2 were given
[04/11/2017 18:00] ERROR owner load 73: 'coroutine' object has no attribute 'save'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 49, in DeepFry
    result.save(self.path + 'test_edited.jpg')
AttributeError: 'coroutine' object has no attribute 'save'
[04/11/2017 18:01] ERROR owner load 73: 'coroutine' object has no attribute 'save'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 49, in DeepFry
    result.save(self.path + 'test_edited.jpg')
AttributeError: 'coroutine' object has no attribute 'save'
[04/11/2017 18:02] ERROR owner load 73: 'coroutine' object has no attribute 'img'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 49, in DeepFry
    result.img.save(self.path + 'test_edited.jpg')
AttributeError: 'coroutine' object has no attribute 'img'
[04/11/2017 18:03] ERROR owner load 68: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 50, 6, "    //result.save(self.path + 'test_edited.jpg')\n"))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 50
    //result.save(self.path + 'test_edited.jpg')
     ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 50, 6, "    //result.save(self.path + 'test_edited.jpg')\n"))
[04/11/2017 18:05] ERROR owner load 73: deepfry2() missing 1 required positional argument: 'self'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 49, in DeepFry
    result = deepfry2()
TypeError: deepfry2() missing 1 required positional argument: 'self'
[04/11/2017 19:49] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 23, in deepfry
    scale_value=scale1.get()
NameError: name 'scale1' is not defined
[04/11/2017 19:50] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 26, in deepfry
    img.save('testnew.jpg', 'JPEG', quality=8)
NameError: name 'img' is not defined
[04/11/2017 19:51] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 29, in deepfry
    await self.bot.send_file('testnew.jpg')
TypeError: send_file() missing 1 required positional argument: 'fp'
[04/11/2017 19:53] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    await image.save('testnew.jpg', 'JPEG', quality=8)
TypeError: object NoneType can't be used in 'await' expression
[04/11/2017 20:03] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 26, in deepfry
    converter = PIL.ImageEnhance.Color(image)
NameError: name 'PIL' is not defined
[04/11/2017 20:09] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 25, in deepfry
    image = Image.open (self.path + "/" + filename)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2530, in open
    fp = builtins.open(filename, "rb")
FileNotFoundError: [Errno 2] No such file or directory: 'data\\deepfry/test.png'
[04/11/2017 20:11] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\JpegImagePlugin.py", line 605, in _save
    rawmode = RAWMODE[im.mode]
KeyError: 'RGBA'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 29, in deepfry
    image.save('testnew3.jpg', 'JPEG', quality=8)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 1928, in save
    save_handler(self, fp, filename)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\JpegImagePlugin.py", line 607, in _save
    raise IOError("cannot write mode %s as JPEG" % im.mode)
OSError: cannot write mode RGBA as JPEG
[04/11/2017 20:11] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 29, in deepfry
    image.save('testnew3.jpg', 'RGBA', quality=8)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 1920, in save
    save_handler = SAVE[format.upper()]
KeyError: 'RGBA'
[04/11/2017 22:14] ERROR owner _reload 155: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 32, 53, '        saturation = ImageColor.hs1(hue, saturation%, lightness%)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 32
    saturation = ImageColor.hs1(hue, saturation%, lightness%)
                                                ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 32, 53, '        saturation = ImageColor.hs1(hue, saturation%, lightness%)\n'))
[04/11/2017 22:15] ERROR owner _reload 155: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 33, 60, '        image = saturation(red=0, green=120, blue=240, 300%, 200%)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33
    image = saturation(red=0, green=120, blue=240, 300%, 200%)
                                                       ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 33, 60, '        image = saturation(red=0, green=120, blue=240, 300%, 200%)\n'))
[04/11/2017 22:15] ERROR owner _reload 155: ('positional argument follows keyword argument', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 33, 55, '        image = saturation(red=0, green=120, blue=240, 300, 200)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33
    image = saturation(red=0, green=120, blue=240, 300, 200)
                                                  ^
SyntaxError: positional argument follows keyword argument

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('positional argument follows keyword argument', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 33, 55, '        image = saturation(red=0, green=120, blue=240, 300, 200)\n'))
[04/11/2017 22:16] ERROR owner _reload 155: ('positional argument follows keyword argument', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 33, 55, '        image = saturation(red=0, green=120, blue=240, 300, 200)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33
    image = saturation(red=0, green=120, blue=240, 300, 200)
                                                  ^
SyntaxError: positional argument follows keyword argument

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('positional argument follows keyword argument', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 33, 55, '        image = saturation(red=0, green=120, blue=240, 300, 200)\n'))
[04/11/2017 22:17] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 32, in deepfry
    saturation = ImageColor.hsl(hue, saturation, lightness)
AttributeError: module 'PIL.ImageColor' has no attribute 'hsl'
[04/11/2017 22:17] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 32, in deepfry
    saturation = ImageColor.hsl(hue, saturation, lightness)
AttributeError: module 'PIL.ImageColor' has no attribute 'hsl'
[04/11/2017 22:29] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 975, in convert
    im = self.im.convert(mode, dither)
ValueError: conversion from RGB to JPEG not supported

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 39, in deepfry
    image = image.convert("JPEG")
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 980, in convert
    im = im.convert(mode, dither)
ValueError: conversion from RGB to JPEG not supported
[04/11/2017 22:41] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 25, in deepfry
    channel = ctx.message.channel
AttributeError: 'str' object has no attribute 'message'
[04/11/2017 22:41] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    image = Image.open (link)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2530, in open
    fp = builtins.open(filename, "rb")
OSError: [Errno 22] Invalid argument: 'https://host123d1qm.cloudconvert.com/download/~7uwm6SWbWjgIO5VsirxurjQToXU'
[04/11/2017 22:43] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    import urllib, cStringIO
ModuleNotFoundError: No module named 'cStringIO'
[04/11/2017 22:45] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    import urllib, io.StringIO
ModuleNotFoundError: No module named 'io.StringIO'; 'io' is not a package
[04/11/2017 22:45] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    import urllib, io.StringIO
ModuleNotFoundError: No module named 'io.StringIO'; 'io' is not a package
[04/11/2017 22:45] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11, in <module>
    import urllib, StringIO
ModuleNotFoundError: No module named 'StringIO'
[04/11/2017 22:47] ERROR owner _reload 155: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 11, 39, 'from urllib.request import urlopen, io.io.BytesIO\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 11
    from urllib.request import urlopen, io.io.BytesIO
                                          ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 11, 39, 'from urllib.request import urlopen, io.io.BytesIO\n'))
[04/11/2017 22:49] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 29, in deepfry
    image = Image.open (BytesIO(response.content))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2572, in open
    % (filename if filename else fp))
OSError: cannot identify image file <_io.BytesIO object at 0x0650DCC0>
[04/11/2017 22:51] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\JpegImagePlugin.py", line 605, in _save
    rawmode = RAWMODE[im.mode]
KeyError: 'RGBA'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 41, in deepfry
    image.save('testnew3.jpg', quality=8)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 1928, in save
    save_handler(self, fp, filename)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\JpegImagePlugin.py", line 607, in _save
    raise IOError("cannot write mode %s as JPEG" % im.mode)
OSError: cannot write mode RGBA as JPEG
[04/11/2017 22:51] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 41, in deepfry
    image = image.Convert('RBG')
AttributeError: 'Image' object has no attribute 'Convert'
[04/11/2017 22:52] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 975, in convert
    im = self.im.convert(mode, dither)
ValueError: conversion from RGBA to RBG not supported

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 41, in deepfry
    image = image.convert("RBG")
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 980, in convert
    im = im.convert(mode, dither)
ValueError: conversion from RGB to RBG not supported
[04/11/2017 23:56] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 42, in deepfry
    image.save(meme, "JPEG",  quality=8)
NameError: name 'meme' is not defined
[04/11/2017 23:56] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 42, in deepfry
    meme = image.save(meme, "JPEG",  quality=8)
UnboundLocalError: local variable 'meme' referenced before assignment
[04/11/2017 23:57] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 43, in deepfry
    image.save(meme, "JPEG",  quality=8)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 1925, in save
    fp = builtins.open(filename, "w+b")
FileNotFoundError: [Errno 2] No such file or directory: ''
[04/11/2017 23:59] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\aiohttp\client_reqrep.py", line 407, in write_bytes
    result = stream.send(value)
  File "lib\aiohttp\helpers.py", line 191, in _gen_form_data
    yield from self._writer.serialize()
  File "lib\aiohttp\multipart.py", line 969, in serialize
    yield from part.serialize()
  File "lib\aiohttp\multipart.py", line 768, in serialize
    yield from self._maybe_encode_stream(self._serialize_obj())
  File "lib\aiohttp\multipart.py", line 781, in _serialize_obj
    return self._serialize_default(obj)
  File "lib\aiohttp\multipart.py", line 813, in _serialize_default
    raise TypeError('unknown body part type %r' % type(obj))
TypeError: unknown body part type <class 'PIL.Image.Image'>

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 42, in deepfry
    await self.bot.send_file(channel, image)
  File "lib\discord\client.py", line 1234, in send_file
    filename=filename, content=content, tts=tts)
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 202, in _request
    yield from resp.start(conn, read_until_eof)
  File "lib\aiohttp\client_reqrep.py", line 640, in start
    message = yield from httpstream.read()
  File "lib\aiohttp\streams.py", line 641, in read
    result = yield from super().read()
  File "lib\aiohttp\streams.py", line 476, in read
    yield from self._waiter
aiohttp.errors.ClientRequestError: Can not write request body for https://discordapp.com/api/v6/channels/376364424035827713/messages
[05/11/2017 06:46] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 52, in setup
    bot.add_cog(DeepFry(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 24, in __init__
    os.makedirs("data/deepfry")
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\os.py", line 220, in makedirs
    mkdir(name, mode)
FileExistsError: [WinError 183] Cannot create a file when that file already exists: 'data/deepfry'
[05/11/2017 06:48] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    id = message.author.id
NameError: name 'message' is not defined
[05/11/2017 06:52] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    id = message.author.id
AttributeError: 'Context' object has no attribute 'author'
[05/11/2017 06:55] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    id = self.author.id
AttributeError: 'DeepFry' object has no attribute 'author'
[05/11/2017 06:58] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    id = message.author.id
AttributeError: 'Context' object has no attribute 'author'
[05/11/2017 07:00] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    id = message.author.id
AttributeError: 'DeepFry' object has no attribute 'author'
[05/11/2017 07:01] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 16, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 23, in DeepFry
    @bot.event()
NameError: name 'bot' is not defined
[05/11/2017 07:01] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 16, in <module>
    class DeepFry:
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 23, in DeepFry
    @self.bot.event()
NameError: name 'self' is not defined
[05/11/2017 07:02] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 27, in deepfry
    id = message.author.id
AttributeError: 'DeepFry' object has no attribute 'author'
[05/11/2017 07:08] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 44, in deepfry
    image.save(self.path + "/" + id + ".jpg", quality=8)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 1925, in save
    fp = builtins.open(filename, "w+b")
FileNotFoundError: [Errno 2] No such file or directory: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:12] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 47, in deepfry
    await self.bot.send_file(channel, id + ".jpg")
  File "lib\discord\client.py", line 1225, in send_file
    with open(fp, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: '314124904737931275.jpg'
[05/11/2017 07:19] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 32, in deepfry
    response = requests.get(link)
  File "lib\requests\api.py", line 72, in get
    return request('get', url, params=params, **kwargs)
  File "lib\requests\api.py", line 58, in request
    return session.request(method=method, url=url, **kwargs)
  File "lib\requests\sessions.py", line 494, in request
    prep = self.prepare_request(req)
  File "lib\requests\sessions.py", line 437, in prepare_request
    hooks=merge_hooks(request.hooks, self.hooks),
  File "lib\requests\models.py", line 305, in prepare
    self.prepare_url(url, params)
  File "lib\requests\models.py", line 379, in prepare_url
    raise MissingSchema(error)
requests.exceptions.MissingSchema: Invalid URL '<link': No schema supplied. Perhaps you meant http://<link?
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33, in deepfry
    image = Image.open (BytesIO(response.content))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2572, in open
    % (filename if filename else fp))
OSError: cannot identify image file <_io.BytesIO object at 0x0198CFC0>
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33, in deepfry
    image = Image.open (BytesIO(response.content))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2572, in open
    % (filename if filename else fp))
OSError: cannot identify image file <_io.BytesIO object at 0x019FAF60>
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33, in deepfry
    image = Image.open (BytesIO(response.content))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2572, in open
    % (filename if filename else fp))
OSError: cannot identify image file <_io.BytesIO object at 0x01A68F00>
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:20] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/234014949888884736.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:21] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 48, in deepfry
    os.remove(self.path + "/" + id + ".jpg")
FileNotFoundError: [WinError 2] The system cannot find the file specified: 'data\\deepfry/314124904737931275.jpg'
[05/11/2017 07:39] ERROR owner _reload 155: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 15, 39, '        if not (ctx.message.author.id = user.id):\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 15
    if not (ctx.message.author.id = user.id):
                                  ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 15, 39, '        if not (ctx.message.author.id = user.id):\n'))
[05/11/2017 07:40] ERROR owner _reload 155: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 15, 38, '        if not ctx.message.author.id = user.id:\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 15
    if not ctx.message.author.id = user.id:
                                 ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 15, 38, '        if not ctx.message.author.id = user.id:\n'))
[05/11/2017 11:35] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\discord\gateway.py", line 425, in poll_event
    msg = yield from self.recv()
  File "lib\websockets\protocol.py", line 319, in recv
    raise ConnectionClosed(self.close_code, self.close_reason)
websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 4004, reason = Authentication failed..

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 603, in main
    yield from bot.connect()
  File "lib\discord\client.py", line 448, in connect
    yield from self.ws.poll_event()
  File "lib\discord\gateway.py", line 432, in poll_event
    raise ConnectionClosed(e) from e
discord.errors.ConnectionClosed: WebSocket connection is closed: code = 4004, reason = Authentication failed..
[05/11/2017 11:37] ERROR red <module> 616: Traceback (most recent call last):
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: UNAUTHORIZED (status code: 401): 401: Unauthorized

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 262, in static_login
    raise LoginFailure('Improper token has been passed.') from e
discord.errors.LoginFailure: Improper token has been passed.

[05/11/2017 11:37] ERROR red <module> 616: Traceback (most recent call last):
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: UNAUTHORIZED (status code: 401): 401: Unauthorized

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 262, in static_login
    raise LoginFailure('Improper token has been passed.') from e
discord.errors.LoginFailure: Improper token has been passed.

[05/11/2017 11:37] ERROR red <module> 616: Traceback (most recent call last):
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: UNAUTHORIZED (status code: 401): 401: Unauthorized

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 262, in static_login
    raise LoginFailure('Improper token has been passed.') from e
discord.errors.LoginFailure: Improper token has been passed.

[05/11/2017 14:22] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 32, in deepfry
    response = requests.get(link)
  File "lib\requests\api.py", line 72, in get
    return request('get', url, params=params, **kwargs)
  File "lib\requests\api.py", line 58, in request
    return session.request(method=method, url=url, **kwargs)
  File "lib\requests\sessions.py", line 494, in request
    prep = self.prepare_request(req)
  File "lib\requests\sessions.py", line 437, in prepare_request
    hooks=merge_hooks(request.hooks, self.hooks),
  File "lib\requests\models.py", line 305, in prepare
    self.prepare_url(url, params)
  File "lib\requests\models.py", line 379, in prepare_url
    raise MissingSchema(error)
requests.exceptions.MissingSchema: Invalid URL 'image': No schema supplied. Perhaps you meant http://image?
[23/11/2017 08:46] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33, in deepfry
    response = requests.get(link)
  File "lib\PIL\Image.py", line 2572, in open
OSError: cannot identify image file <_io.BytesIO object at 0x05C813F0>
[23/11/2017 09:40] ERROR red on_command_error 369: Exception in command 'deepfry'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 33, in deepfry
    id = ctx.message.author.id
  File "lib\PIL\Image.py", line 2572, in open
OSError: cannot identify image file <_io.BytesIO object at 0x03D44150>
[23/11/2017 22:07] ERROR red load_cogs 573: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 50, 74, '       \t\tawait self.bot.send_file(channel, self.path + "/" + id + ".jpg")\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 50
    await self.bot.send_file(channel, self.path + "/" + id + ".jpg")
                                                                   ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 50, 74, '       \t\tawait self.bot.send_file(channel, self.path + "/" + id + ".jpg")\n'))
[24/11/2017 01:26] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 601, in _create_direct_connection
    local_addr=self._local_addr)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 764, in create_connection
    yield from self.sock_connect(sock, address)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\selector_events.py", line 451, in sock_connect
    return (yield from fut)
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 603, in main
    yield from bot.connect()
  File "lib\discord\client.py", line 451, in connect
    self.ws = yield from DiscordWebSocket.from_client(self, resume=True)
  File "lib\discord\gateway.py", line 198, in from_client
    gateway = yield from client.http.get_gateway()
  File "lib\discord\http.py", line 633, in get_gateway
    data = yield from self.request(Route('GET', '/gateway'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\async_timeout\__init__.py", line 35, in __exit__
    self._do_exit(exc_type)
  File "lib\async_timeout\__init__.py", line 80, in _do_exit
    raise asyncio.TimeoutError
concurrent.futures._base.TimeoutError
[25/11/2017 05:02] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[25/11/2017 05:02] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[25/11/2017 05:02] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[25/11/2017 05:02] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[25/11/2017 05:02] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 589, in _create_direct_connection
    hosts = yield from self._resolve_host(req.host, req.port)
  File "lib\aiohttp\connector.py", line 561, in _resolve_host
    self._resolver.resolve(host, port, family=self._family)
  File "lib\aiohttp\resolver.py", line 29, in resolve
    host, port, type=socket.SOCK_STREAM, family=family)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\concurrent\futures\thread.py", line 56, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 11001] Cannot connect to host discordapp.com:443 ssl:True [getaddrinfo failed]
[25/11/2017 05:03] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 601, in _create_direct_connection
    local_addr=self._local_addr)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 777, in create_connection
    raise exceptions[0]
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 764, in create_connection
    yield from self.sock_connect(sock, address)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\selector_events.py", line 451, in sock_connect
    return (yield from fut)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\selector_events.py", line 481, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
TimeoutError: [Errno 10060] Connect call failed ('104.16.58.5', 443)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 624, in _create_direct_connection
    (req.host, req.port, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Can not connect to discordapp.com:443 [Connect call failed ('104.16.58.5', 443)]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 599, in main
    bot=not bot.settings.self_bot)
  File "lib\discord\client.py", line 416, in login
    yield from getattr(self, '_login_' + str(n))(*args, **kwargs)
  File "lib\discord\client.py", line 346, in _login_1
    data = yield from self.http.static_login(token, bot=is_bot)
  File "lib\discord\http.py", line 258, in static_login
    data = yield from self.request(Route('GET', '/users/@me'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Cannot connect to host discordapp.com:443 ssl:True [Can not connect to discordapp.com:443 [Connect call failed ('104.16.58.5', 443)]]
[01/12/2017 19:58] ERROR owner load 68: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 22, 95, '                await self.bot.say(ctx.message.author.mention + " shot everyone in existence".)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 22
    await self.bot.say(ctx.message.author.mention + " shot everyone in existence".)
                                                                                  ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 22, 95, '                await self.bot.say(ctx.message.author.mention + " shot everyone in existence".)\n'))
[01/12/2017 20:09] ERROR owner load 68: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 25, 15, '        else if ctx.message.author.id == user.id:\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 25
    else if ctx.message.author.id == user.id:
          ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 25, 15, '        else if ctx.message.author.id == user.id:\n'))
[01/12/2017 20:12] ERROR owner load 68: ('non-default argument follows default argument', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 11, 20, '    async def shoot(self, ctx, user : discord.Member = None, school, school2, wtf):\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 11
    async def shoot(self, ctx, user : discord.Member = None, school, school2, wtf):
                   ^
SyntaxError: non-default argument follows default argument

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('non-default argument follows default argument', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 11, 20, '    async def shoot(self, ctx, user : discord.Member = None, school, school2, wtf):\n'))
[01/12/2017 20:14] ERROR red on_command_error 369: Exception in command 'shoot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 23, in shoot
    if ctx.message.author.id != user.id:
AttributeError: 'NoneType' object has no attribute 'id'
[01/12/2017 20:16] ERROR owner load 68: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 22, 95, '                await self.bot.say(ctx.message.author.mention + " shot everyone in existence".)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 22
    await self.bot.say(ctx.message.author.mention + " shot everyone in existence".)
                                                                                  ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('invalid syntax', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\shoot.py', 22, 95, '                await self.bot.say(ctx.message.author.mention + " shot everyone in existence".)\n'))
[01/12/2017 20:18] ERROR red on_command_error 369: Exception in command 'shoot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 23, in shoot
    if ctx.message.author.id != user.id:
AttributeError: 'NoneType' object has no attribute 'id'
[01/12/2017 20:19] ERROR red on_command_error 369: Exception in command 'shoot'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\shoot.py", line 23, in shoot
    if ctx.message.author.id != user.id:
AttributeError: 'NoneType' object has no attribute 'id'
[01/12/2017 20:23] ERROR owner load 73: cannot import name 'version'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 6, in <module>
    import PIL
  File "lib\PIL\__init__.py", line 14, in <module>
    from . import version
ImportError: cannot import name 'version'
[01/12/2017 20:34] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\meme.py', 14, 31, '\t\tself.download = bot.download\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\meme.py", line 14
    self.download = bot.download
                               ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\meme.py', 14, 31, '\t\tself.download = bot.download\n'))
[01/12/2017 20:38] ERROR owner load 73: '<class '__main__.Bot'>' object has no attribute 'download'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\meme.py", line 64, in setup
    bot.add_cog(meme(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\meme.py", line 14, in __init__
    self.download = bot.download
  File "lib\discord\client.py", line 296, in __getattr__
    raise AttributeError(msg.format(self.__class__, name))
AttributeError: '<class '__main__.Bot'>' object has no attribute 'download'
[01/12/2017 23:20] ERROR red <module> 634: Fatal exception, attempting graceful logout
Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 601, in _create_direct_connection
    local_addr=self._local_addr)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 777, in create_connection
    raise exceptions[0]
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 764, in create_connection
    yield from self.sock_connect(sock, address)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\selector_events.py", line 451, in sock_connect
    return (yield from fut)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\selector_events.py", line 481, in _sock_connect_cb
    raise OSError(err, 'Connect call failed %s' % (address,))
TimeoutError: [Errno 10060] Connect call failed ('104.16.59.5', 443)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "lib\aiohttp\connector.py", line 304, in connect
    yield from self._create_connection(req)
  File "lib\aiohttp\connector.py", line 578, in _create_connection
    transport, proto = yield from self._create_direct_connection(req)
  File "lib\aiohttp\connector.py", line 624, in _create_direct_connection
    (req.host, req.port, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Can not connect to discordapp.com:443 [Connect call failed ('104.16.59.5', 443)]

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "red.py", line 614, in <module>
    loop.run_until_complete(main(bot))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\asyncio\base_events.py", line 467, in run_until_complete
    return future.result()
  File "red.py", line 603, in main
    yield from bot.connect()
  File "lib\discord\client.py", line 451, in connect
    self.ws = yield from DiscordWebSocket.from_client(self, resume=True)
  File "lib\discord\gateway.py", line 198, in from_client
    gateway = yield from client.http.get_gateway()
  File "lib\discord\http.py", line 633, in get_gateway
    data = yield from self.request(Route('GET', '/gateway'))
  File "lib\discord\http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "lib\aiohttp\client.py", line 555, in __iter__
    resp = yield from self._coro
  File "lib\aiohttp\client.py", line 198, in _request
    conn = yield from self._connector.connect(req)
  File "lib\aiohttp\connector.py", line 314, in connect
    .format(key, exc.strerror)) from exc
aiohttp.errors.ClientOSError: [Errno 10060] Cannot connect to host discordapp.com:443 ssl:True [Can not connect to discordapp.com:443 [Connect call failed ('104.16.59.5', 443)]]
[01/12/2017 23:20] ERROR red load_cogs 573: '<class '__main__.Bot'>' object has no attribute 'download'
Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\meme.py", line 64, in setup
    bot.add_cog(meme(bot))
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\meme.py", line 14, in __init__
    self.download = bot.download
  File "lib\discord\client.py", line 296, in __getattr__
    raise AttributeError(msg.format(self.__class__, name))
AttributeError: '<class '__main__.Bot'>' object has no attribute 'download'
[02/12/2017 10:14] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 98, 26, '\t@commands.cooldown(1, 5)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 98
    @commands.cooldown(1, 5)
                           ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 98, 26, '\t@commands.cooldown(1, 5)\n'))
[02/12/2017 10:20] ERROR owner load 73: Command ascii is already registered.
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 139, in setup
    bot.add_cog(imagefilter(bot))
  File "lib\discord\ext\commands\bot.py", line 655, in add_cog
    self.add_command(member)
  File "lib\discord\ext\commands\core.py", line 487, in add_command
    raise discord.ClientException('Command {0.name} is already registered.'.format(command))
discord.errors.ClientException: Command ascii is already registered.
[02/12/2017 10:22] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
    if final is False:
UnboundLocalError: local variable 'final' referenced before assignment
[02/12/2017 10:22] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
    if final is False:
UnboundLocalError: local variable 'final' referenced before assignment
[02/12/2017 10:27] ERROR owner load 73: Command ascii is already registered.
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 139, in setup
    bot.add_cog(imagefilter(bot))
  File "lib\discord\ext\commands\bot.py", line 655, in add_cog
    self.add_command(member)
  File "lib\discord\ext\commands\core.py", line 487, in add_command
    raise discord.ClientException('Command {0.name} is already registered.'.format(command))
discord.errors.ClientException: Command ascii is already registered.
[02/12/2017 10:31] ERROR owner load 73: Command ascii is already registered.
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 139, in setup
    bot.add_cog(imagefilter(bot))
  File "lib\discord\ext\commands\bot.py", line 655, in add_cog
    self.add_command(member)
  File "lib\discord\ext\commands\core.py", line 487, in add_command
    raise discord.ClientException('Command {0.name} is already registered.'.format(command))
discord.errors.ClientException: Command ascii is already registered.
[02/12/2017 11:06] ERROR owner load 73: Command ascii is already registered.
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 139, in setup
    bot.add_cog(imagefilter(bot))
  File "lib\discord\ext\commands\bot.py", line 655, in add_cog
    self.add_command(member)
  File "lib\discord\ext\commands\core.py", line 487, in add_command
    raise discord.ClientException('Command {0.name} is already registered.'.format(command))
discord.errors.ClientException: Command ascii is already registered.
[02/12/2017 11:06] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
    #if final is False:
UnboundLocalError: local variable 'final' referenced before assignment
[02/12/2017 11:13] ERROR red on_command_error 369: Exception in command 'reload'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 149, in _reload
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 135, in setup
    bot.add_cog(imagefilter(bot))
  File "lib\discord\ext\commands\bot.py", line 655, in add_cog
    self.add_command(member)
  File "lib\discord\ext\commands\core.py", line 487, in add_command
    raise discord.ClientException('Command {0.name} is already registered.'.format(command))
discord.errors.ClientException: Command ascii is already registered.
[02/12/2017 11:13] ERROR owner load 73: Command ascii is already registered.
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 947, in _load_cog
    self.bot.load_extension(mod_obj.__name__)
  File "lib\discord\ext\commands\bot.py", line 738, in load_extension
    lib.setup(self)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 135, in setup
    bot.add_cog(imagefilter(bot))
  File "lib\discord\ext\commands\bot.py", line 655, in add_cog
    self.add_command(member)
  File "lib\discord\ext\commands\core.py", line 487, in add_command
    raise discord.ClientException('Command {0.name} is already registered.'.format(command))
discord.errors.ClientException: Command ascii is already registered.
[02/12/2017 11:13] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
    await self.gist(ctx, text, txt)
UnboundLocalError: local variable 'final' referenced before assignment
[02/12/2017 11:14] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
UnboundLocalError: local variable 'final' referenced before assignment
[02/12/2017 11:16] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
UnboundLocalError: local variable 'final' referenced before assignment
[02/12/2017 12:33] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 43, 51, '\t    image = image.filter(ImageFilter.SHARPEN(10))\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 43
    image = image.filter(ImageFilter.SHARPEN(10))
                                                ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 43, 51, '\t    image = image.filter(ImageFilter.SHARPEN(10))\n'))
[02/12/2017 12:34] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 50, 74, '       \t\tawait self.bot.send_file(channel, self.path + "/" + id + ".jpg")\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 50
    await self.bot.send_file(channel, self.path + "/" + id + ".jpg")
                                                                   ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\deepfry.py', 50, 74, '       \t\tawait self.bot.send_file(channel, self.path + "/" + id + ".jpg")\n'))
[02/12/2017 12:38] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 106, in ascii
    if len(txt) >= 1999:
NameError: name 'txt' is not defined
[02/12/2017 13:33] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
    await self.bot.say("```" + asciitext + "```")
  File "lib\discord\ext\commands\bot.py", line 309, in _augmented_msg
    msg = yield from coro
  File "red.py", line 92, in send_message
    return await super().send_message(*args, **kwargs)
  File "lib\discord\client.py", line 1151, in send_message
    data = yield from self.http.send_message(channel_id, content, guild_id=guild_id, tts=tts, embed=embed)
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: BAD REQUEST (status code: 400)
[02/12/2017 13:34] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
    await self.bot.say("```" + asciitext + "```")
  File "lib\discord\ext\commands\bot.py", line 309, in _augmented_msg
    msg = yield from coro
  File "red.py", line 92, in send_message
    return await super().send_message(*args, **kwargs)
  File "lib\discord\client.py", line 1151, in send_message
    data = yield from self.http.send_message(channel_id, content, guild_id=guild_id, tts=tts, embed=embed)
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: BAD REQUEST (status code: 400)
[02/12/2017 13:34] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 107, in ascii
    await self.bot.say("```" + asciitext + "```")
  File "lib\discord\ext\commands\bot.py", line 309, in _augmented_msg
    msg = yield from coro
  File "red.py", line 92, in send_message
    return await super().send_message(*args, **kwargs)
  File "lib\discord\client.py", line 1151, in send_message
    data = yield from self.http.send_message(channel_id, content, guild_id=guild_id, tts=tts, embed=embed)
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: BAD REQUEST (status code: 400)
[02/12/2017 15:51] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 116, 24, '\timg = Image.open(link)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 116
    img = Image.open(link)
                         ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 116, 24, '\timg = Image.open(link)\n'))
[02/12/2017 15:54] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 120, 32, '\tfontSize = int(imageSize[1]/5)\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 120
    fontSize = int(imageSize[1]/5)
                                 ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 120, 32, '\tfontSize = int(imageSize[1]/5)\n'))
[02/12/2017 15:59] ERROR red on_command_error 369: Exception in command 'makememe'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 116, in makememe
    img = Image.open(link)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2530, in open
    fp = builtins.open(filename, "rb")
OSError: [Errno 22] Invalid argument: 'https://media.discordapp.net/attachments/333737600470876165/386636846664253440/unknown.png?width=1202&height=677'
[02/12/2017 15:59] ERROR red on_command_error 369: Exception in command 'makememe'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 116, in makememe
    img = Image.open(link)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\Image.py", line 2530, in open
    fp = builtins.open(filename, "rb")
OSError: [Errno 22] Invalid argument: 'https://media.discordapp.net/attachments/333737600470876165/386636846664253440/unknown.png'
[02/12/2017 16:02] ERROR red on_command_error 369: Exception in command 'makememe'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 118, in makememe
    imageSize = img.size
NameError: name 'img' is not defined
[02/12/2017 16:03] ERROR red on_command_error 369: Exception in command 'makememe'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 122, in makememe
    font = ImageFont.truetype("/Library/Fonts/Impact.ttf", fontSize)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\ImageFont.py", line 259, in truetype
    return FreeTypeFont(font, size, index, encoding, layout_engine)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\ImageFont.py", line 143, in __init__
    self.font = core.getfont(font, size, index, encoding, layout_engine=layout_engine)
OSError: cannot open resource
[02/12/2017 16:08] ERROR red on_command_error 369: Exception in command 'makememe'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 151, in makememe
    draw.text(topTextPosition, topString, (255,255,255), font=font)
NameError: name 'topString' is not defined
[02/12/2017 16:09] ERROR owner load 68: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 155, 59, '\tawait self.bot.send_file(ctx.message.channel, "temp.png")\n'))
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 674, in exec_module
  File "<frozen importlib._bootstrap_external>", line 781, in get_code
  File "<frozen importlib._bootstrap_external>", line 741, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 155
    await self.bot.send_file(ctx.message.channel, "temp.png")
                                                            ^
TabError: inconsistent use of tabs and spaces in indentation

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 949, in _load_cog
    raise CogLoadError(*e.args)
cogs.owner.CogLoadError: ('inconsistent use of tabs and spaces in indentation', ('C:\\Users\\computer\\Documents\\Red-DiscordBot\\cogs\\imagefilter.py', 155, 59, '\tawait self.bot.send_file(ctx.message.channel, "temp.png")\n'))
[02/12/2017 16:36] ERROR red on_command_error 369: Exception in command 'makememe'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 127, in makememe
    font = ImageFont.truetype("/Library/Fonts/Impact.ttf", fontSize)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\ImageFont.py", line 259, in truetype
    return FreeTypeFont(font, size, index, encoding, layout_engine)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\ImageFont.py", line 143, in __init__
    self.font = core.getfont(font, size, index, encoding, layout_engine=layout_engine)
OSError: cannot open resource
[02/12/2017 16:40] ERROR red on_command_error 369: Exception in command 'makememe'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 127, in makememe
    font = ImageFont.truetype("/Library/Fonts/Impact.ttf", fontSize)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\ImageFont.py", line 259, in truetype
    return FreeTypeFont(font, size, index, encoding, layout_engine)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\site-packages\PIL\ImageFont.py", line 143, in __init__
    self.font = core.getfont(font, size, index, encoding, layout_engine=layout_engine)
OSError: cannot open resource
[02/12/2017 18:41] ERROR owner load 73: Run "pip install tabulate" in your CMD/Linux Terminal
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 14, in <module>
    from tabulate import tabulate
ModuleNotFoundError: No module named 'tabulate'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 16, in <module>
    raise Exception('Run "pip install tabulate" in your CMD/Linux Terminal')
Exception: Run "pip install tabulate" in your CMD/Linux Terminal
[02/12/2017 18:41] ERROR owner load 73: Run "pip install tabulate" in your CMD/Linux Terminal
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 14, in <module>
    from tabulate import tabulate
ModuleNotFoundError: No module named 'tabulate'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 16, in <module>
    raise Exception('Run "pip install tabulate" in your CMD/Linux Terminal')
Exception: Run "pip install tabulate" in your CMD/Linux Terminal
[02/12/2017 18:42] ERROR owner load 73: Run "pip install tabulate" in your CMD/Linux Terminal
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 14, in <module>
    from tabulate import tabulate
ModuleNotFoundError: No module named 'tabulate'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 64, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 945, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 16, in <module>
    raise Exception('Run "pip install tabulate" in your CMD/Linux Terminal')
Exception: Run "pip install tabulate" in your CMD/Linux Terminal
[08/12/2017 19:54] ERROR red load_cogs 573: No module named 'PIL'
Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\deepfry.py", line 6, in <module>
    import PIL
ModuleNotFoundError: No module named 'PIL'
[08/12/2017 19:54] ERROR red load_cogs 573: No module named 'PIL'
Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 6, in <module>
    import PIL
ModuleNotFoundError: No module named 'PIL'
[08/12/2017 19:54] ERROR red load_cogs 573: Run "pip install tabulate" in your CMD/Linux Terminal
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 14, in <module>
    from tabulate import tabulate
ModuleNotFoundError: No module named 'tabulate'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\punish.py", line 16, in <module>
    raise Exception('Run "pip install tabulate" in your CMD/Linux Terminal')
Exception: Run "pip install tabulate" in your CMD/Linux Terminal
[08/12/2017 19:59] ERROR red on_command_error 369: Exception in command 'cog install'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 397, in _install
    install_cog = await self.install(repo_name, cog, notify_reqs=True)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 447, in install
    requirements = [r for r in requirements
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 448, in <listcomp>
    if not self.is_lib_installed(r)]
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 530, in is_lib_installed
    return bool(find_spec(name))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\util.py", line 88, in find_spec
    parent = __import__(parent_name, fromlist=['__path__'])
ModuleNotFoundError: No module named 'Pillow==4'
[08/12/2017 19:59] ERROR red on_command_error 369: Exception in command 'cog install'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 397, in _install
    install_cog = await self.install(repo_name, cog, notify_reqs=True)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 447, in install
    requirements = [r for r in requirements
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 448, in <listcomp>
    if not self.is_lib_installed(r)]
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 530, in is_lib_installed
    return bool(find_spec(name))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\util.py", line 88, in find_spec
    parent = __import__(parent_name, fromlist=['__path__'])
ModuleNotFoundError: No module named 'Pillow==4'
[08/12/2017 19:59] ERROR red on_command_error 369: Exception in command 'cog install'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 397, in _install
    install_cog = await self.install(repo_name, cog, notify_reqs=True)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 447, in install
    requirements = [r for r in requirements
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 448, in <listcomp>
    if not self.is_lib_installed(r)]
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\downloader.py", line 530, in is_lib_installed
    return bool(find_spec(name))
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\util.py", line 88, in find_spec
    parent = __import__(parent_name, fromlist=['__path__'])
ModuleNotFoundError: No module named 'Pillow==4'
[08/12/2017 20:01] ERROR owner load 74: No module named 'colorama'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 65, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 20, in <module>
    from colorama import init
ModuleNotFoundError: No module named 'colorama'
[08/12/2017 20:09] ERROR owner load 74: No module named 'termcolor'
Traceback (most recent call last):
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 65, in load
    self._load_cog(module)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 22, in <module>
    from termcolor import cprint
ModuleNotFoundError: No module named 'termcolor'
[08/12/2017 20:11] ERROR red load_cogs 573: No module named 'termcolor'
Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 22, in <module>
    from termcolor import cprint
ModuleNotFoundError: No module named 'termcolor'
[09/12/2017 17:53] ERROR red on_command_error 369: Exception in command 'byemom'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 179, in byemom
    response = requests.get(url)
  File "lib\requests\api.py", line 72, in get
    return request('get', url, params=params, **kwargs)
  File "lib\requests\api.py", line 58, in request
    return session.request(method=method, url=url, **kwargs)
  File "lib\requests\sessions.py", line 494, in request
    prep = self.prepare_request(req)
  File "lib\requests\sessions.py", line 437, in prepare_request
    hooks=merge_hooks(request.hooks, self.hooks),
  File "lib\requests\models.py", line 305, in prepare
    self.prepare_url(url, params)
  File "lib\requests\models.py", line 379, in prepare_url
    raise MissingSchema(error)
requests.exceptions.MissingSchema: Invalid URL 'MCPE SERVER SOFTWARE BASED ON C#': No schema supplied. Perhaps you meant http://MCPE SERVER SOFTWARE BASED ON C#?
[11/12/2017 13:05] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 293, in ascii
    await self.bot.say("```" + asciitext + "```")
  File "lib\discord\ext\commands\bot.py", line 309, in _augmented_msg
    msg = yield from coro
  File "red.py", line 92, in send_message
    return await super().send_message(*args, **kwargs)
  File "lib\discord\client.py", line 1151, in send_message
    data = yield from self.http.send_message(channel_id, content, guild_id=guild_id, tts=tts, embed=embed)
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: BAD REQUEST (status code: 400)
[11/12/2017 13:30] ERROR red on_command_error 369: Exception in command 'ascii'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 293, in ascii
    await self.bot.say("```" + asciitext + "```")
  File "lib\discord\ext\commands\bot.py", line 309, in _augmented_msg
    msg = yield from coro
  File "red.py", line 92, in send_message
    return await super().send_message(*args, **kwargs)
  File "lib\discord\client.py", line 1151, in send_message
    data = yield from self.http.send_message(channel_id, content, guild_id=guild_id, tts=tts, embed=embed)
  File "lib\discord\http.py", line 200, in request
    raise HTTPException(r, data)
discord.errors.HTTPException: BAD REQUEST (status code: 400)
[12/12/2017 08:17] ERROR red on_command_error 369: Exception in command 'makememe2'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\Red-DiscordBot\cogs\imagefilter.py", line 110, in makememe2
    response = requests.get(link)
  File "lib\requests\api.py", line 72, in get
    return request('get', url, params=params, **kwargs)
  File "lib\requests\api.py", line 58, in request
    return session.request(method=method, url=url, **kwargs)
  File "lib\requests\sessions.py", line 494, in request
    prep = self.prepare_request(req)
  File "lib\requests\sessions.py", line 437, in prepare_request
    hooks=merge_hooks(request.hooks, self.hooks),
  File "lib\requests\models.py", line 305, in prepare
    self.prepare_url(url, params)
  File "lib\requests\models.py", line 379, in prepare_url
    raise MissingSchema(error)
requests.exceptions.MissingSchema: Invalid URL '<@376786683921825793>': No schema supplied. Perhaps you meant http://<@376786683921825793>?
[14/12/2017 08:24] ERROR red load_cogs 573: No module named 'PIL'
Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\deepfry.py", line 6, in <module>
    import PIL
ModuleNotFoundError: No module named 'PIL'
[14/12/2017 08:24] ERROR red load_cogs 573: No module named 'PIL'
Traceback (most recent call last):
  File "red.py", line 570, in load_cogs
    owner_cog._load_cog(extension)
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\owner.py", line 946, in _load_cog
    mod_obj = importlib.import_module(cogname)
  File "C:\Users\computer\AppData\Local\Programs\Python\Python36-32\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\imagefilter.py", line 7, in <module>
    import PIL
ModuleNotFoundError: No module named 'PIL'
[14/12/2017 08:35] ERROR red on_command_error 369: Exception in command 'logfetch server'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\activitylog.py", line 290, in fetch_server
    channels = [c for c in server.channels if check(c)]
AttributeError: 'NoneType' object has no attribute 'channels'
[14/12/2017 18:10] ERROR red on_command_error 369: Exception in command 'border setup'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\grenzpolizei.py", line 237, in _setup
    new_server = await self._setup_questions(context)
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\grenzpolizei.py", line 197, in _setup_questions
    channels['member_event_channel'] = await self._what_channel('Which channel do you want to use for member events? (please mention the channel)', author)
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\grenzpolizei.py", line 99, in _what_channel
    channel = message.raw_channel_mentions[0]
IndexError: list index out of range
[14/12/2017 19:34] ERROR red on_command_error 369: Exception in command 'rainbow'
Traceback (most recent call last):
  File "lib\discord\ext\commands\core.py", line 50, in wrapped
    ret = yield from coro(*args, **kwargs)
  File "C:\Users\computer\Documents\GitHub\b-bot-python\cogs\rainbow.py", line 43, in rainbow
    await self.bot.edit_role(ctx.message.server, role, colour=discord.Colour(value=colour))
  File "lib\discord\client.py", line 2859, in edit_role
    yield from self.http.edit_role(server.id, role.id, **payload)
  File "lib\discord\http.py", line 196, in request
    raise Forbidden(r, data)
discord.errors.Forbidden: FORBIDDEN (status code: 403): Missing Permissions
